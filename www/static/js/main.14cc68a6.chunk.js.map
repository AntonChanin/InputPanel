{"version":3,"sources":["components/edit-button/edit-button.component.jsx","components/edit-form/edit-form.component.jsx","components/typer/typer.component.jsx","components/page/page-list/page-list.component.jsx","components/page/page-time/page-time.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["EditButton","children","handleCreate","className","onClick","EditForm","saveTodo","useState","value","setValue","onSubmit","event","preventDefault","onChange","target","TYPING_SPEED","Typer","state","text","isDeleting","loopNum","typingSpeed","handleType","dataText","props","fullText","length","setState","substring","setTimeout","this","last","id","React","Component","PageList","todos","setTodos","todoText","trimmedText","trim","map","todo","index","toString","Math","random","PageTime","setInterval","element","Date","toLocaleTimeString","ReactDOM","render","document","getElementById","App","touchStatus","setTouchStatus","x1","y1","onTouchStart","e","firstTouch","nativeEvent","touches","clientX","clientY","onTouchEnd","x2","changedTouches","y2","xDiff","yDiff","abs","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","startApp","StrictMode","window","cordova","addEventListener"],"mappings":"oUACaA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,aAAb,OAAgC,wBAAQC,UAAU,MAAMC,QAASF,EAAjC,SAAgDD,KCsC3FI,G,MAnCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,OACE,uBACEN,UAAU,YACVO,SAAU,SAAAC,GACRA,EAAMC,iBACNN,EAASE,GACTC,EAAS,KALb,UAQE,0BACEN,UAAU,uBACVU,SAAU,SAAAF,GACRF,EAASE,EAAMG,OAAON,QAExBA,MAAOA,IAET,qBAAKL,UAAU,sBAAf,SACE,cAAC,EAAD,CACEO,SACE,SAAAC,GACEA,EAAMC,iBACNN,EAASE,GACTC,EAAS,KALf,yB,6BCpBJM,G,MAAe,KAGAC,E,4MAEnBC,MAAQ,CACNC,KAAM,GACNC,YAAY,EACZC,QAAS,EACTC,YAAaN,G,EAOfO,WAAa,WACX,IAAQC,EAAa,EAAKC,MAAlBD,SACR,EAAmD,EAAKN,MAAhDE,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QAASF,EAA7B,EAA6BA,KAAMG,EAAnC,EAAmCA,YAE7BI,EAAWF,EADPH,EAAUG,EAASG,QAG7B,EAAKC,SAAS,CACZT,KAAMC,EAAaI,EAAWE,EAASG,UAAU,EAAGV,EAAKQ,OAAS,GAClEL,YAAaF,EAvBI,GAuB0BJ,IAGxCI,GAAcD,IAASO,EAGlBN,GAAuB,KAATD,GACtB,EAAKS,SAAS,CACZR,YAAY,EACZC,QAASA,EAAU,IALrBS,YAAW,kBAAM,EAAKF,SAAS,CAAER,YAAY,MAAS,KASxDU,WAAW,EAAKP,WAAYD,I,uDAzB9B,WACES,KAAKR,e,oBA2BP,WACE,OACE,sBAAKnB,UAAU,QAAf,UACG2B,KAAKb,MAAMC,OAASY,KAAKN,MAAMD,UAAYO,KAAKN,MAAMO,MAAQ,qCAAE,+BAAO,wBAA6B,0BACrG,+BAAOD,KAAKN,MAAMO,KAAOD,KAAKb,MAAMC,KAAOY,KAAKN,MAAMD,WACrDO,KAAKb,MAAMC,OAASY,KAAKN,MAAMD,UAAY,sBAAMS,GAAIF,KAAKN,MAAMO,KAAQ,SAAW,OAAxC,SAAiDD,KAAKN,MAAMO,KAAQ,IAAM,KACrHD,KAAKb,MAAMC,OAASY,KAAKN,MAAMD,UAAYO,KAAKN,MAAMD,UAAYO,KAAKN,MAAMO,MAAQ,qCAAE,uBAAK,iCAAO,aAAa,uBAAM,qC,GA3C5FE,IAAMC,WCsB1BC,G,MAvBE,WACf,MAA0B5B,mBAAS,IAAnC,mBAAO6B,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKlC,UAAU,YAAf,UACE,cAAC,EAAD,CAAUG,SAAU,SAAAgC,GAChB,IAAMC,EAAcD,EAASE,OACzBD,EAAYb,OAAS,GACvBW,EAAS,GAAD,mBAAKD,GAAL,CAAYG,QAG1B,qBAAKpC,UAAU,OAAf,SACGiC,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACT,qBAAKxC,UAAU,aAAf,SACE,cAAC,EAAD,CACE4B,KAAMY,EAAM,IAAMP,EAAMV,OACxBH,SAAU,CAACmB,MAHkBC,EAAMC,WAA2B,IAAdC,KAAKC,oBCSpDC,G,MAtBE,WAkBf,OADAC,aAfF,WAEE,IAAMC,EACJ,sBAAK9C,UAAU,sBAAf,eAAuC,IAAI+C,MAAOC,wBAKpDC,IAASC,OACPJ,EACAK,SAASC,eAAe,gBAKR,KAEhB,qBAAKpD,UAAU,YAAY6B,GAAG,gB,MC8BnBwB,MAhDf,WACE,MAAsCjD,oBAAS,GAA/C,mBAAOkD,EAAP,KAAoBC,EAApB,KACIC,EAAK,KACLC,EAAK,KAgCT,OACE,qBAAKzD,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAY0D,aAhC/B,SAA0BC,GACxB,IAAMC,EAAaD,EAAEE,YAAYC,QAAQ,GAEzCN,EAAKI,EAAWG,QAChBN,EAAKG,EAAWI,SA4B6CC,WAzB/D,SAAwBN,GACtB,IAAKH,IAAOC,EACV,OAAO,EAET,IAAIS,EAAKP,EAAEE,YAAYM,eAAe,GAAGJ,QACrCK,EAAKT,EAAEE,YAAYM,eAAe,GAAGH,QAErCK,EAAQH,EAAKV,EACbc,EAAQF,EAAKX,EACbf,KAAK6B,IAAIF,GAAS3B,KAAK6B,IAAID,KAEzBD,EAAQ,GACVd,EAAe,eACfiB,QAAQC,IAAI,QAAS,iBAErBlB,EAAe,cACfiB,QAAQC,IAAI,OAAQnB,KAGxBE,EAAK,KACLC,EAAK,MAKH,SACE,sBAAKzD,UAAS,gBAAWsD,GAAzB,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,YClCKoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDRQ,EAAW,WACflC,IAASC,OACP,cAAC,IAAMkC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASC,eAAe,SAE1BsB,KAGEW,OAAOC,QACTnC,SAASoC,iBAAiB,cAAeJ,GAAU,GAEnDA,M","file":"static/js/main.14cc68a6.chunk.js","sourcesContent":["import './edit-button.styles.css';\r\nexport const EditButton = ({ children, handleCreate }) => <button className=\"btn\" onClick={handleCreate}>{children}</button>;\r\n","import React, { useState } from 'react';\r\nimport { EditButton } from '../edit-button/edit-button.component';\r\nimport './edit-form.style.css';\r\n\r\nconst EditForm = ({ saveTodo }) => {\r\n    const [value, setValue] = useState('');\r\n    return (\r\n      <form \r\n        className=\"edit-form\"\r\n        onSubmit={event => {\r\n          event.preventDefault();\r\n          saveTodo(value);\r\n          setValue('');\r\n        }}\r\n      >\r\n        <textarea\r\n          className=\"edit-form__edit-area\"\r\n          onChange={event => {\r\n            setValue(event.target.value);\r\n          }}\r\n          value={value}\r\n        />\r\n        <div className=\"edit-form__edit-btn\">\r\n          <EditButton\r\n            onSubmit={\r\n              event => {\r\n                event.preventDefault();\r\n                saveTodo(value);\r\n                setValue('');\r\n              }\r\n            }\r\n          >\r\n          Send\r\n          </EditButton>\r\n        </div>\r\n        \r\n      </form>\r\n  );\r\n};\r\nexport default EditForm;","import React from 'react';\r\nimport './typer.styles.css';\r\n\r\nconst TYPING_SPEED = 150;\r\nconst DELETING_SPEED = 30;\r\n\r\nexport default class Typer extends React.Component {\r\n\r\n  state = {\r\n    text: '',\r\n    isDeleting: false,\r\n    loopNum: 0,\r\n    typingSpeed: TYPING_SPEED\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleType();\r\n  }\r\n\r\n  handleType = () => {\r\n    const { dataText } = this.props;\r\n    const { isDeleting, loopNum, text, typingSpeed } = this.state;\r\n    const i = loopNum % dataText.length;\r\n    const fullText = dataText[i];\r\n\r\n    this.setState({\r\n      text: isDeleting ? dataText : fullText.substring(0, text.length + 1),\r\n      typingSpeed: isDeleting ? DELETING_SPEED : TYPING_SPEED\r\n    });\r\n\r\n    if (!isDeleting && text === fullText) {     \r\n      setTimeout(() => this.setState({ isDeleting: true }), 500);   \r\n    }\r\n     else if (isDeleting && text === '') {\r\n      this.setState({\r\n        isDeleting: false,\r\n        loopNum: loopNum + 1\r\n      });      \r\n    }\r\n\r\n    setTimeout(this.handleType, typingSpeed);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"typer\" >\r\n        {this.state.text !== this.props.dataText && this.props.last && <><span>{'> waiting typing...'}</span><br/></>}\r\n        <span>{this.props.last ? this.state.text : this.props.dataText }</span>\r\n        {this.state.text !== this.props.dataText && <span id={this.props.last  ? 'cursor' : 'done'}>{this.props.last  ? '|' : ''}</span>}\r\n        {this.state.text === this.props.dataText && this.props.dataText && this.props.last && <><br/><span>{'> end task'}<br/>{'> wait new message...'}</span></>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from 'react';\r\nimport EditForm from '../../../components/edit-form/edit-form.component';\r\nimport Typer from '../../typer/typer.component';\r\nimport './page-list.style.css';\r\n\r\nconst PageList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  return (\r\n    <div className=\"page-list\">\r\n      <EditForm saveTodo={todoText => {\r\n          const trimmedText = todoText.trim();\r\n          if (trimmedText.length > 0) {\r\n            setTodos([...todos, trimmedText]);\r\n          }\r\n        }}/>\r\n      <div className=\"list\">\r\n        {todos.map((todo, index) => (\r\n          <div className=\"list__item\" key={index.toString() + Math.random()*100}>\r\n            <Typer\r\n              last={index+1 === todos.length} \r\n              dataText={[todo]}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n)};\r\n\r\nexport default PageList;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './page-time.styles.css';\r\n\r\nconst PageTime = () =>{ \r\n \r\nfunction tick() {\r\n  // Формируем JSX объект element\r\n  const element = (\r\n    <div className=\"root-time__time-now\"> {new Date().toLocaleTimeString()}</div>\r\n  );\r\n   \r\n  // Передаем element в DOM , React следит за предыдущим и новым состоянием элемента\r\n  // и заменяет старое значение на новое\r\n  ReactDOM.render(\r\n    element,\r\n    document.getElementById('root-time')\r\n  );\r\n   \r\n }\r\n // Вызываем функцию tick() через секунду\r\n  setInterval(tick, 1000);\r\n  return (\r\n    <div className=\"page-time\" id=\"root-time\"></div>\r\n  );\r\n};\r\nexport default PageTime;","import React, { useState } from 'react';\nimport  PageList  from './components/page/page-list/page-list.component';\nimport  PageTime  from './components/page/page-time/page-time.component';\nimport './App.css';\n\nfunction App() {\n  const [touchStatus, setTouchStatus] = useState(true);\n  let x1 = null;\n  let y1 = null;\n\n  function handleTouchStart(e) {\n    const firstTouch = e.nativeEvent.touches[0];\n    \n    x1 = firstTouch.clientX\n    y1 = firstTouch.clientY\n  }\n\n  function handleTouchEnd(e) {\n    if (!x1 || !y1) {\n      return false;\n    }\n    let x2 = e.nativeEvent.changedTouches[0].clientX;\n    let y2 = e.nativeEvent.changedTouches[0].clientY;\n\n    let xDiff = x2 - x1;\n    let yDiff = y2 - y1;\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\n      // r - l\n      if (xDiff > 0) {\n        setTouchStatus('swipe-right');\n        console.log('right', 'swipe-right');\n      } else {\n        setTouchStatus('swipe-left');\n        console.log('left', touchStatus);\n      }\n    }\n    x1 = null;\n    y1 = null;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-swipe\" onTouchStart={handleTouchStart} onTouchEnd={handleTouchEnd}>\n        <div className={`swipe ${touchStatus}`}>\n          <PageList/>\n        {/* <div className={touchStatus === 'end-left' ? !touchStatus ? 'swipe-right' : 'swipe-left' : touchStatus}> */}\n          <PageTime/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst startApp = () => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  reportWebVitals();\n}\n\nif (window.cordova) {\n  document.addEventListener('deviceready', startApp, false);\n} else {\n  startApp();\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}